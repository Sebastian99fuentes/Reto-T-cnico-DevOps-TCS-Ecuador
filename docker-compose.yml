services:
  # Primer nodo del API
  api-node1:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - INSTANCE_NAME=API-Node-1
      - ASPNETCORE_URLS=http://+:80
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Segundo nodo del API (requerimiento mínimo)
  api-node2:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - INSTANCE_NAME=API-Node-2
      - ASPNETCORE_URLS=http://+:80 
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ocelotgateway:
    image: ${DOCKER_REGISTRY-}ocelotgateway
    build:
      context: .
      dockerfile: OcelotGateway/Dockerfile
    ports:
      - "5000:80"  # Puerto expuesto al host
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      - api-node1
      - api-node2
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

